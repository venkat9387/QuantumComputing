#Author          : Venkatesan Manivasagam
#Student Number  : 2007095
#Date Created    : 05/11/2021


import matplotlib.pyplot as plt
import numpy as np
from matplotlib import colors
from matplotlib.ticker import PercentFormatter
 
Fidelity = [0.9999946299795288, 0.9999985601756441, 0.9973054094121412, 0.9999954041965082, 0.9999995336606987, 0.9999962431678532, 0.9999959110977522, 0.9992877364426033, 0.999997130344582, 0.9966601895212879, 0.9999970018628094, 0.9996024473275982, 0.999997304474744, 0.9999438620579866, 0.9999982802636359, 0.9993176084786084, 0.9999988284280785, 0.9999996345416232, 0.9999982481956072, 0.9999994820204396, 0.9999987954469559, 0.9999986694165987, 0.9971757156569244, 0.9999988382414922, 0.9988221257997162, 0.9982360276152156, 0.9999960182673819, 0.9999995764087114, 0.9993903422743499, 0.9999970665211431, 0.9999997199434597, 0.999239060030167, 0.999997203253326, 0.9961059830462441, 0.9999957497798989, 0.9994881734286316, 0.9986009755286934, 0.9999988262328534, 0.9985728848091022, 0.9984592524023065, 0.9999966890774195, 0.9987713737350709, 0.9988944415564537, 0.9999993945850748, 0.9985602132494839, 0.9999993260172462, 0.9999956304104112, 0.9991457211885743, 0.9999937026983625, 0.9993046268034805, 0.9999964641808223, 0.9999997829971644, 0.9989483183535683, 0.9999997834121241, 0.999917413523804, 0.9983984225874578, 0.9988366654475496, 0.9999966704263418, 0.999995131705376, 0.9995034867217757, 0.9999974434578999, 0.9999918614714718, 0.9999986913298242, 0.9986228784376578, 0.999996326512974, 0.9997535369341608, 0.9983234737425895, 0.9999529869280918, 0.999999033365836, 0.9999992793182769, 0.9999886878359933, 0.9999963427024031, 0.999997430010367, 0.9990984228127544, 0.9999990786855738, 0.9991049851383612, 0.9999981698818451, 0.9991653826572278, 0.9992197752875348, 0.9999972890926755, 0.9997847521230301, 0.9999998219527727, 0.9999979048081291, 0.9999997845992996, 0.9977247884566753, 0.9986213348190759, 0.9997397438041564, 0.9999998342157105, 0.999254685664288, 0.9964151894576161, 0.9995941806510357, 0.9999981730469327, 0.999996971800841, 0.9996246048104834, 0.9999991487120926, 0.9999967230286158, 0.9972590706631096, 0.9994678664110302, 0.9989793268200111, 0.998923700699728]


# Creating dataset
n_bins = len(Fidelity)
 

 
# Creating histogram
fig, axs = plt.subplots(1, 1,
                        figsize =(11, 8),
                        tight_layout = True)
 
 
# Remove axes splines
for s in ['top', 'bottom', 'left', 'right']:
    axs.spines[s].set_visible(False)
 
# Remove x, y ticks
axs.xaxis.set_ticks_position('none')
axs.yaxis.set_ticks_position('none')
   
# Add padding between axes and labels
axs.xaxis.set_tick_params(pad = 5)
axs.yaxis.set_tick_params(pad = 10)
 
# Add x, y gridlines
axs.grid(b = True, color ='grey',
        linestyle ='-.', linewidth = 0.5,
        alpha = 0.6)

#bin = (max(Fidelity) - min(Fidelity))/ np.sqrt(len(Fidelity))

ideal_bin = np.arange( min(Fidelity) , max(Fidelity) ,0.0001  ) # 0.002 
weights = np.ones_like(Fidelity) / len(Fidelity)
 
# Creating histogram
N, bins, patches = axs.hist(Fidelity, weights= weights  , bins = ideal_bin,edgecolor='#E6E6E6', color='#EE6666')
 

#Error Correction 

#plt.xlabel("Fidelity of decoding 11")
#plt.ylabel("Probabilty Density")
#plt.title("Probabilty Density distribution of decoding '11' using Repetition code.")

#Optimal Control
plt.xlabel("Fidelity of decoding '1'. ")
plt.ylabel("Probabilty Density")

plt.title("Probabilty Density distribution of SigmaX's Fidelity using Grape Algorithm and MC-Solver.")
 

# Show plot
plt.show()



